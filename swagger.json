{
    openapi: "3.0.0",
        info: {
            title: "JamesDbApi Documentation",
            version: ConfigManager.APP.API_VERSION,
            description: "REST API for database management and operations",
        },
        paths: {
            "/": {
                get: {
                    summary: "Root endpoint",
                    description: "Welcome message and API information",
                    responses: {
                        "200": {
                            description: "API information",
                            content: {
                                "application/json": {
                                    schema: {
                                        type: "object",
                                        properties: {
                                            message: { type: "string" },
                                            name: { type: "string" },
                                            version: { type: "string" },
                                            documentation: { type: "string" },
                                            health: { type: "string" },
                                            timestamp: { type: "number" }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "/api": {
                get: {
                    summary: "API information",
                    description: "Get API status and available endpoints",
                    responses: {
                        "200": {
                            description: "API status and endpoints",
                            content: {
                                "application/json": {
                                    schema: {
                                        type: "object",
                                        properties: {
                                            status: { type: "string" },
                                            uptime: { type: "number" },
                                            timestamp: { type: "number" },
                                            endpoints: {
                                                type: "object",
                                                properties: {
                                                    schema: { type: "string" },
                                                    database: { type: "string" },
                                                    relations: { type: "string" },
                                                    health: { type: "string" }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "/api/_schema": {
                get: {
                    summary: "Schema operations",
                    description: "Database schema management endpoints",
                    responses: {
                        "200": { description: "Schema operations available" }
                    }
                }
            },
            "/api/_schema/{dbName}": {
                get: {
                    summary: "Get database schema",
                    description: "Retrieve schema information for a specific database",
                    parameters: [
                        {
                            name: "dbName",
                            in: "path",
                            required: true,
                            schema: { type: "string" },
                            description: "Database name"
                        }
                    ],
                    responses: {
                        "200": { description: "Database schema information" },
                        "404": { description: "Database not found" }
                    }
                }
            },
            "/api/_schema/{dbName}/tables": {
                get: {
                    summary: "List database tables",
                    description: "Get all tables in a specific database",
                    parameters: [
                        {
                            name: "dbName",
                            in: "path",
                            required: true,
                            schema: { type: "string" },
                            description: "Database name"
                        }
                    ],
                    responses: {
                        "200": { description: "List of tables" },
                        "404": { description: "Database not found" }
                    }
                }
            },
            "/api/_schema/{dbName}/tables/{tableName}": {
                get: {
                    summary: "Get table schema",
                    description: "Get detailed schema for a specific table",
                    parameters: [
                        {
                            name: "dbName",
                            in: "path",
                            required: true,
                            schema: { type: "string" },
                            description: "Database name"
                        },
                        {
                            name: "tableName",
                            in: "path",
                            required: true,
                            schema: { type: "string" },
                            description: "Table name"
                        }
                    ],
                    responses: {
                        "200": { description: "Table schema information" },
                        "404": { description: "Database or table not found" }
                    }
                }
            },
            "/api/_database": {
                get: {
                    summary: "Database operations",
                    description: "Database management endpoints",
                    responses: {
                        "200": { description: "Database operations available" }
                    }
                }
            },
            "/api/_database/list": {
                get: {
                    summary: "List databases",
                    description: "Get list of all available databases",
                    responses: {
                        "200": { description: "List of databases" }
                    }
                }
            },
            "/api/_database/{dbName}/connect": {
                post: {
                    summary: "Connect to database",
                    description: "Establish connection to a specific database",
                    parameters: [
                        {
                            name: "dbName",
                            in: "path",
                            required: true,
                            schema: { type: "string" },
                            description: "Database name"
                        }
                    ],
                    responses: {
                        "200": { description: "Connection established" },
                        "404": { description: "Database not found" },
                        "500": { description: "Connection failed" }
                    }
                }
            },
            "/api/_database/{dbName}/disconnect": {
                post: {
                    summary: "Disconnect from database",
                    description: "Close connection to a specific database",
                    parameters: [
                        {
                            name: "dbName",
                            in: "path",
                            required: true,
                            schema: { type: "string" },
                            description: "Database name"
                        }
                    ],
                    responses: {
                        "200": { description: "Connection closed" },
                        "404": { description: "Database not found" }
                    }
                }
            },
            "/api/_database/{dbName}/query": {
                post: {
                    summary: "Execute query",
                    description: "Execute a SQL query on a specific database",
                    parameters: [
                        {
                            name: "dbName",
                            in: "path",
                            required: true,
                            schema: { type: "string" },
                            description: "Database name"
                        }
                    ],
                    requestBody: {
                        required: true,
                        content: {
                            "application/json": {
                                schema: {
                                    type: "object",
                                    properties: {
                                        query: { type: "string" },
                                        params: { type: "array" }
                                    },
                                    required: ["query"]
                                }
                            }
                        }
                    },
                    responses: {
                        "200": { description: "Query executed successfully" },
                        "400": { description: "Invalid query" },
                        "404": { description: "Database not found" },
                        "500": { description: "Query execution failed" }
                    }
                }
            },
            "/api/_relations": {
                get: {
                    summary: "Relations operations",
                    description: "Database relations management endpoints",
                    responses: {
                        "200": { description: "Relations operations available" }
                    }
                }
            },
            "/api/_relations/{dbName}": {
                get: {
                    summary: "Get database relations",
                    description: "Retrieve all relations in a specific database",
                    parameters: [
                        {
                            name: "dbName",
                            in: "path",
                            required: true,
                            schema: { type: "string" },
                            description: "Database name"
                        }
                    ],
                    responses: {
                        "200": { description: "Database relations" },
                        "404": { description: "Database not found" }
                    }
                }
            },
            "/api/_relations/{dbName}/foreign-keys": {
                get: {
                    summary: "Get foreign keys",
                    description: "Get all foreign key relationships in a database",
                    parameters: [
                        {
                            name: "dbName",
                            in: "path",
                            required: true,
                            schema: { type: "string" },
                            description: "Database name"
                        }
                    ],
                    responses: {
                        "200": { description: "Foreign key relationships" },
                        "404": { description: "Database not found" }
                    }
                }
            },
            "/api/_relations/{dbName}/tables/{tableName}": {
                get: {
                    summary: "Get table relations",
                    description: "Get all relations for a specific table",
                    parameters: [
                        {
                            name: "dbName",
                            in: "path",
                            required: true,
                            schema: { type: "string" },
                            description: "Database name"
                        },
                        {
                            name: "tableName",
                            in: "path",
                            required: true,
                            schema: { type: "string" },
                            description: "Table name"
                        }
                    ],
                    responses: {
                        "200": { description: "Table relations" },
                        "404": { description: "Database or table not found" }
                    }
                }
            },
            "/health": {
                get: {
                    summary: "Health check",
                    description: "Check API and database health status",
                    responses: {
                        "200": {
                            description: "Service is healthy",
                            content: {
                                "application/json": {
                                    schema: {
                                        type: "object",
                                        properties: {
                                            status: { type: "string" },
                                            timestamp: { type: "number" },
                                            uptime: { type: "number" },
                                            version: { type: "string" },
                                            databases: { type: "object" },
                                            memory: { type: "object" }
                                        }
                                    }
                                }
                            }
                        },
                        "503": {
                            description: "Service is degraded or unhealthy"
                        }
                    }
                }
            },
            "/metrics": {
                get: {
                    summary: "System metrics",
                    description: "Get system performance metrics",
                    responses: {
                        "200": {
                            description: "System metrics",
                            content: {
                                "application/json": {
                                    schema: {
                                        type: "object",
                                        properties: {
                                            system: {
                                                type: "object",
                                                properties: {
                                                    uptime: { type: "number" },
                                                    memory: { type: "object" },
                                                    databases: { type: "object" }
                                                }
                                            },
                                            environment: { type: "string" },
                                            timestamp: { type: "number" }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
}